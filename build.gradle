plugins {
    id 'groovy'
    id("com.github.johnrengelman.shadow") version "7.1.1"

    id 'io.micronaut.application' version '3.2.1' //use for building mn apps
    //id 'io.micronaut.library' version '3.2.1'   // use this for building mn libraries
}

micronaut {
    version = "3.3.1"
    runtime "netty"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group 'org.softwood'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}


String vertxVersion = "4.2.4"
String rxJavaVersion = "3.1.3"
String junitJupiterVersion = "5.8.2"
String hazelCastVersion = "5.0.2"
String groovyVersion = "3.0.9"
String groovyMavenCoordinate = ""
String spockVersion = "2.0-groovy-3.0"
String MicronautVersion  = "3.3.0"
String MicronautTestVersion  = "3.0.5"
String jansiVersion = "2.4.0"

dependencies {


   implementation group: 'org.fusesource.jansi', name: 'jansi', version: "$jansiVersion"  //for colors


    implementation group: 'com.hazelcast', name: 'hazelcast', version: "$hazelCastVersion"

    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"

    implementation group: 'io.vertx', name: 'vertx-core', version: "$vertxVersion"
    implementation group: 'io.vertx', name: 'vertx-lang-groovy', version: "$vertxVersion"
    implementation group: 'io.vertx', name: 'vertx-hazelcast', version: "$vertxVersion"
    compileOnly "io.vertx:vertx-rx-java3:$vertxVersion"

    testImplementation group: 'io.vertx', name: 'vertx-unit', version: "$vertxVersion"
    testCompileOnly "io.vertx:vertx-rx-java3:$vertxVersion"

    //rest
    implementation group: "org.codehaus.groovy", name: 'groovy', version: "${groovyVersion}"
    implementation group: "org.codehaus.groovy", name: 'groovy-yaml', version: "${groovyVersion}"
    //implementation group: 'javax.inject', name: 'javax.inject', version: '1' - oracle deprecated use jakarta.inject
    implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha13'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha6'

    //dependencies generated from generating a mn cli project
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.cache:micronaut-cache-hazelcast")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("io.micronaut:micronaut-http-validation")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    //add these to enable bean introspection
    runtimeOnly("io.micronaut:micronaut-core")
    compileOnly ("io.micronaut:micronaut-inject-groovy")

    //add extra groovy support
    //implementation group: 'io.micronaut.groovy', name: 'micronaut-groovy-bom', version: '3.0.0', ext: 'pom'


    //from release testing guide 3.3.0
    testImplementation "io.micronaut:micronaut-inject-groovy"  //for when we want to mock beans
    //testImplementation "io.micronaut.test:micronaut-test-core"  //added test core
    //testImplementation "io.micronaut.test:micronaut-test-junit5"  //added test junit5
    testImplementation group: 'io.vertx', name: 'vertx-junit5', version: "$vertxVersion"


    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }

}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.softwood.*")
    }
}


tasks.withType(GroovyCompile).configureEach {
    options.forkOptions.jvmArgs << '-Dspock.iKnowWhatImDoing.disableGroovyVersionCheck=true'    //ok
}



test {
    useJUnitPlatform()
}