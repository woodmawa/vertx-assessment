plugins {
    id 'groovy'
    id 'java'
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group 'org.example'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}


String vertxVersion = "4.2.4"
String junitJupiterVersion = "5.8.2"
String hazelCastVersion = "5.0.2"
String groovyVersion = "3.0.9"
String groovyMavenCoordinate = ""
String spockVersion = "2.0-groovy-3.0"
String MicronautVersion  = "3.3.0"
String MicronautTestVersion  = "3.0.5"
String jansiVersion = "2.4.0"

dependencies {

    //implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.6'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha13'
    //implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha5'

    implementation group: 'org.fusesource.jansi', name: 'jansi', version: "$jansiVersion"  //for colors


    implementation group: 'com.hazelcast', name: 'hazelcast', version: "$hazelCastVersion"

    implementation group: 'io.vertx', name: 'vertx-core', version: "$vertxVersion"
    implementation group: 'io.vertx', name: 'vertx-lang-groovy', version: "$vertxVersion"
    implementation group: 'io.vertx', name: 'vertx-hazelcast', version: "$vertxVersion"
    testImplementation group: 'io.vertx', name: 'vertx-unit', version: "$vertxVersion"

    //rest
    implementation group: "org.codehaus.groovy", name: 'groovy', version: "${groovyVersion}"
    implementation group: "org.codehaus.groovy", name: 'groovy-yaml', version: "${groovyVersion}"

    implementation group: 'javax.inject', name: 'javax.inject', version: '1'

    annotationProcessor(platform("io.micronaut:micronaut-bom:$MicronautVersion")) // D1
    annotationProcessor("io.micronaut:micronaut-inject-java") // D2
    annotationProcessor("io.micronaut:micronaut-inject-groovy") // D2

    //testAnnnotationProcessor(platform("io.micronaut:micronaut-bom:$MicronautVersion")) // - doesnt exist ?
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor "io.micronaut:micronaut-inject-groovy"

    compileOnly(platform("io.micronaut:micronaut-bom:$MicronautVersion")) // D3
    compileOnly("io.micronaut:micronaut-inject") // D4
    compileOnly group: 'io.micronaut', name: 'micronaut-inject-groovy', version: "$MicronautVersion"


    testImplementation group: "org.codehaus.groovy", name: 'groovy', version:"${groovyVersion}"
    testImplementation group: "org.codehaus.groovy", name: 'groovy', version:"${groovyVersion}"

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$junitJupiterVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$junitJupiterVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$junitJupiterVersion"

    //testImplementation platform("io.micronaut:micronaut-test-bom:$MicronautTestVersion")
    testImplementation "io.micronaut.test:micronaut-test-spock:1.1.5:"
    testCompileOnly group: 'io.micronaut', name: 'micronaut-inject-groovy',  version:  "$MicronautVersion"

    //testImplementation "io.micronaut.test:micronaut-test-junit5:$MicronautVersion"

    testImplementation 'org.spockframework:spock-core:${spockVersion}'
 }


//makes no difference !
tasks.create("run") {
    System.properties["vertx.logger-delegate-factory-class-name"] = "io.vertx.core.logging.SLF4JLogDelegateFactory"

}

tasks.withType(GroovyCompile).configureEach {
    options.forkOptions.jvmArgs << '-Dspock.iKnowWhatImDoing.disableGroovyVersionCheck=true'    //ok
}

test {
    useJUnitPlatform()
}